---
alwaysApply: true
---

# 代码质量和注释规范

## 注释要求

1. **类注释**:
   ```php
   /**
    * Class ClassName
    * 类的简要描述
    *
    * @author  作者姓名
    * @email   邮箱地址
    * @lasttime: 最后修改时间
    * @package 包名
    */
   ```

2. **方法注释**:
   ```php
   /**
    * 方法简要描述
    *
    * @author  作者姓名
    * @email   邮箱地址
    *
    * @param type $param 参数描述
    * @param type $param2 参数描述
    *
    * @return type 返回值描述
    * @throws ExceptionType 异常描述
    * @lasttime: 最后修改时间
    */
   ```

3. **属性注释**:
   ```php
   /**
    * @var type 属性描述
    */
   ```

## 代码风格

1. **缩进和格式**:
   - 使用 4 个空格缩进
   - 左大括号与关键字在同一行
   - 运算符前后加空格
   - 逗号后加空格

2. **变量命名**:
   - 使用有意义的变量名
   - 临时变量使用简短但清晰的名称
   - 避免使用缩写（除非是广泛认知的）

3. **错误处理**:
   - 适当使用 try-catch 处理异常
   - 记录错误日志便于调试
   - 向用户返回友好的错误信息

## 维护性要求

- 保留有用的注释，不要随意删除
- 关键业务逻辑必须有注释说明
- 复杂算法需要详细的实现说明
- 代码格式要优雅，避免多重嵌套
- 使用早期返回减少嵌套层次

## 安全考虑

- 所有用户输入必须进行验证和过滤
- 使用参数化查询防止 SQL 注入
- 敏感数据要进行适当的编码处理
- 避免在代码中硬编码敏感信息